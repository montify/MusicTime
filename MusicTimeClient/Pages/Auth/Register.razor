@page "/register"
@using MusicTimeClient.Contracts
@using MusicTimeClient.Models
@using MusicTimeClient.Models.DTOs.Request

<h3>Register</h3>

<div class="d-flex justify-content-center">
    <EditForm Model="m_Model" OnValidSubmit="Submit">
        <div class="form-group row text-center">
            <label>Email</label>
            <InputText @bind-value="m_Model.Email" type="text" class="form-control text-center" id="email"></InputText>
        </div>
        <div class="form-group row text-center">
            <label>Name</label>
            <input @bind-value="m_Model.Name" type="text" class="form-control text-center" id="name">
        </div>
        <div class="form-group row text-center">
            <label>Password</label>
            <input @bind-value="m_Model.Password" type="text" class="form-control text-center" id="password">
        </div>
        <div class="form-group row text-center">
            <button type="submit" class="btn btn-primary">Submit</button>
            @if (string.IsNullOrEmpty(Message) == false)
            {
                @Message
            }

        </div>
    </EditForm>
</div>

@code {
    [Inject]
    public IAuthService? AuthService { get; set; }

    public string Message { get; set; }
    private UserRegisterRequestDTO m_Model = new UserRegisterRequestDTO();

    public async void Submit()
    {

        if (AuthService is not null)
        {
            var r = await AuthService.Register(m_Model);
            Message = r.Message;

         
        }
    }
}
